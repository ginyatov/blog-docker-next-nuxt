version: "3.8"
services:
  admin:
    restart: unless-stopped
    networks:
      - ginyatov
    build:
      context: ../admin1
      dockerfile: Dockerfile.dev
    command: "yarn start"
    volumes:
      - ../admin/src:/app/src
    ports:
      - 3001:3001
    depends_on:
      - backend
  frontend:
    restart: unless-stopped
    networks:
      - ginyatov
    build:
      context: ../client
      dockerfile: Dockerfile.dev
    command: "yarn dev"
    volumes:
      - ../client/src:/app/src
      - ../client/src/.next:/app/.next
      - ../client/public/uploads:/app/public/uploads
    ports:
      - 3000:3000
    depends_on:
      - admin
      - minio1
  db:
    image: postgres:13.1-alpine
    restart: unless-stopped
    volumes:
      - ../db/:/var/lib/postgresql/data
    env_file:
      - docker.env
    networks:
      - ginyatov
    ports:
      - "5432:5432"
  backend:
    restart: unless-stopped
    networks:
      - ginyatov
    build:
      context: ../server
      dockerfile: Dockerfile.dev
    command: "yarn start:dev"
    volumes:
      - ../server/src:/app/src
    ports:
      - 4000:4000
    depends_on:
      - db
    env_file:
      - ../server/.env
  minio1:
    image: minio/minio:latest
    restart: unless-stopped
    networks:
      - ginyatov
    expose:
      - 9000
    volumes:
      - ../client/public/uploads/:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: SDGCXVFSGSDFSDZC
      MINIO_SECRET_KEY: ADGFDSGVCXFADZ/SDGCZVRSZCV/SDCXBsfvdvzsvsdzA
    command: server /data
  webserver:
    build:
      context: ../nginx
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    working_dir: /var/www
    depends_on:
      - backend
      - frontend
      - minio1
    ports:
      - "80:80"
    networks:
      - ginyatov



volumes:
  minio-data:
  admin:
  server:
  db:
  frontend:


#Docker Networks
networks:
  ginyatov:
    name: ginyatov
    driver: bridge
